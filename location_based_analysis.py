# -*- coding: utf-8 -*-
"""Location-based Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o9GGJzM95GvU_UPiDlSWgnxa-ETdbmoA
"""

!pip install folium

import pandas as pd
import matplotlib.pyplot as plt
import folium

df = pd.read_csv('/content/Dataset .csv')

df.head()

grouped_by_city = df.groupby('City')

restaurant_count = grouped_by_city['Restaurant Name'].count()

plt.bar(restaurant_count.index, restaurant_count.values)
plt.xlabel('City/Local Area')
plt.ylabel('Number of Restaurants')
plt.title('Restaurant Concentration by City/Local Area')
plt.xticks(rotation=90)
plt.show()

from sklearn.cluster import KMeans

X = df[['Latitude', 'Longitude']]
k = 5
kmeans = KMeans(n_clusters=k, random_state=0)
cluster_labels = kmeans.fit_predict(X)
df['Cluster'] = cluster_labels

colors = ['r', 'g', 'b', 'c', 'm', 'y', 'k']

for cluster_num in range(k):
    cluster_data = df[df['Cluster'] == cluster_num]
    plt.scatter(cluster_data['Longitude'], cluster_data['Latitude'],
                c=colors[cluster_num], label=f'Cluster {cluster_num}')
    plt.scatter(kmeans.cluster_centers_[:, 1], kmeans.cluster_centers_[:, 0],
                s=200, c='black', label='Centroids')
    plt.xlabel('Longitude')
    plt.ylabel('Latitude')
    plt.title('K-means Clustering of Restaurants')
    plt.legend()
plt.show()

average_ratings_by_city = grouped_by_city['Aggregate rating'].mean()
print(average_ratings_by_city)

plt.figure(figsize=(10, 6))

plt.bar(average_ratings_by_city.index, average_ratings_by_city.values)
plt.xlabel('City/Local Area')
plt.ylabel('Average Rating')
plt.title('Average Ratings by City/Local Area')
plt.xticks(rotation=90) # Rotate x-axis labels for better readability
plt.tight_layout()
plt.show()

popular_cuisines_by_city = grouped_by_city['Cuisines'].agg(lambda x: x.mode().tolist())
print(popular_cuisines_by_city)

plt.figure(figsize=(10, 6))

for city, cuisines in popular_cuisines_by_city.items():
    plt.bar(city, ', '.join(cuisines))
    plt.xlabel('City/Local Area')
    plt.ylabel('Popular Cuisines')
    plt.title('Popular Cuisines by City/Local Area')
    plt.xticks(rotation=90) # Rotate x-axis labels for better readability
    plt.tight_layout()

plt.show()

common_price_range_by_city = grouped_by_city['Price range'].agg(lambda x: x.mode().iloc[0])
print(common_price_range_by_city)

plt.figure(figsize=(50, 6))

plt.bar(common_price_range_by_city.index, common_price_range_by_city.values)
plt.xlabel('City/Local Area')
plt.ylabel('Common Price Range')
plt.title('Common Price Range by City/Local Area')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

grouped_by_city = df.groupby('City')
cuisine_diversity = grouped_by_city['Cuisines'].apply(lambda x: len(set(x)))
print(cuisine_diversity)

plt.figure(figsize=(10, 6))

plt.bar(cuisine_diversity.index, cuisine_diversity.values)
plt.xlabel('City/Local Area')
plt.ylabel('Cuisine Diversity (Number of Unique Cuisines)')
plt.title('Cuisine Diversity by City/Local Area')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

